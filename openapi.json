{
  "openapi": "3.1.0",
  "info": {
    "title": "Yayska",
    "description": "Yayska Backend API - Educational platform for Irish primary school children",
    "version": "1.0.0"
  },
  "paths": {
    "/api/v1/chats/find-or-create": {
      "post": {
        "tags": ["Chats"],
        "summary": "Find Or Create Session",
        "description": "Finds an existing chat session or creates a new one based on context.",
        "operationId": "find_or_create_session_api_v1_chats_find_or_create_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatSessionFindOrCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ChatSessionResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        },
        "security": [{ "BearerAuth": [] }]
      }
    },
    "/api/v1/chats/": {
      "get": {
        "tags": ["Chats"],
        "summary": "Get Sessions",
        "description": "Get a paginated list of all chat sessions for the current user.",
        "operationId": "get_sessions_api_v1_chats__get",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatSessionListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/chats/{chat_id}/messages": {
      "get": {
        "tags": ["Chats"],
        "summary": "Get Messages",
        "description": "Fetch the message history for a given chat session.",
        "operationId": "get_messages_api_v1_chats__chat_id__messages_get",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "chat_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Chat Id" }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChatMessageResponse"
                  },
                  "title": "Response Get Messages Api V1 Chats  Chat Id  Messages Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Chats"],
        "summary": "Create Message",
        "description": "Send a new message and get the AI's response.",
        "operationId": "create_message_api_v1_chats__chat_id__messages_post",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "chat_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Chat Id" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UserMessageCreate" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ChatMessageResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/chats/{chat_id}/messages/{message_id}": {
      "patch": {
        "tags": ["Chats"],
        "summary": "Update Message Feedback",
        "description": "Add feedback to a specific assistant message.",
        "operationId": "update_message_feedback_api_v1_chats__chat_id__messages__message_id__patch",
        "security": [{ "BearerAuth": [] }],
        "parameters": [
          {
            "name": "chat_id",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "format": "uuid", "title": "Chat Id" }
          },
          {
            "name": "message_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Message Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/MessageFeedbackUpdate" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ChatMessageResponse" }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/HTTPValidationError" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ChatMessageResponse": {
        "properties": {
          "id": { "type": "string", "format": "uuid", "title": "Id" },
          "session_id": {
            "type": "string",
            "format": "uuid",
            "title": "Session Id"
          },
          "role": { "$ref": "#/components/schemas/ChatMessageRole" },
          "content": { "type": "string", "title": "Content" },
          "reasoning": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Reasoning"
          },
          "context_snapshot": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Context Snapshot"
          },
          "llm_usage": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Llm Usage"
          },
          "feedback_thumbs": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Feedback Thumbs"
          },
          "feedback_text": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Feedback Text"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": ["id", "session_id", "role", "content", "created_at"],
        "title": "ChatMessageResponse",
        "description": "Schema for a chat message response."
      },
      "ChatMessageRole": {
        "type": "string",
        "enum": ["USER", "ASSISTANT"],
        "title": "ChatMessageRole",
        "description": "Enum for message roles."
      },
      "ChatSessionFindOrCreate": {
        "properties": {
          "child_id": {
            "type": "integer",
            "title": "Child Id",
            "description": "ID of the child for this chat session."
          },
          "entry_point_type": {
            "$ref": "#/components/schemas/EntryPointType",
            "description": "The context from which the chat was initiated."
          },
          "context_data": {
            "type": "object",
            "title": "Context Data",
            "description": "Data specific to the entry point, e.g., {'concept_id': 123}.",
            "examples": [{ "concept_id": 123 }]
          }
        },
        "type": "object",
        "required": ["child_id", "entry_point_type", "context_data"],
        "title": "ChatSessionFindOrCreate",
        "description": "Schema for finding or creating a chat session."
      },
      "ChatSessionListItem": {
        "properties": {
          "id": { "type": "string", "format": "uuid", "title": "Id" },
          "title": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Title"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": ["id", "title", "updated_at"],
        "title": "ChatSessionListItem",
        "description": "Schema for a single item in the chat session list."
      },
      "ChatSessionListResponse": {
        "properties": {
          "items": {
            "items": { "$ref": "#/components/schemas/ChatSessionListItem" },
            "type": "array",
            "title": "Items"
          },
          "total": { "type": "integer", "title": "Total" }
        },
        "type": "object",
        "required": ["items", "total"],
        "title": "ChatSessionListResponse",
        "description": "Schema for the paginated list of chat sessions."
      },
      "ChatSessionResponse": {
        "properties": {
          "id": { "type": "string", "format": "uuid", "title": "Id" },
          "user_id": { "type": "integer", "title": "User Id" },
          "child_id": { "type": "integer", "title": "Child Id" },
          "title": { "type": "string", "title": "Title" },
          "entry_point_type": { "type": "string", "title": "Entry Point Type" },
          "entry_point_context": {
            "type": "object",
            "title": "Entry Point Context"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "child_id",
          "title",
          "entry_point_type",
          "entry_point_context",
          "created_at",
          "updated_at"
        ],
        "title": "ChatSessionResponse",
        "description": "Schema for a full chat session object response."
      },
      "EntryPointType": {
        "type": "string",
        "enum": ["CONCEPT_COACH"],
        "title": "EntryPointType",
        "description": "Enum for chat entry points."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthCheck": {
        "properties": {
          "status": { "type": "string", "title": "Status" },
          "database_status": { "type": "string", "title": "Database Status" }
        },
        "type": "object",
        "required": ["status", "database_status"],
        "title": "HealthCheck"
      },
      "MessageFeedback": {
        "properties": {
          "vote": {
            "type": "integer",
            "maximum": 1.0,
            "minimum": -1.0,
            "title": "Vote",
            "description": "Vote: 1 for up, -1 for down."
          },
          "text": {
            "anyOf": [
              { "type": "string", "maxLength": 1024 },
              { "type": "null" }
            ],
            "title": "Text",
            "description": "Optional text feedback."
          }
        },
        "type": "object",
        "required": ["vote"],
        "title": "MessageFeedback",
        "description": "Schema for providing feedback on a message."
      },
      "MessageFeedbackUpdate": {
        "properties": {
          "feedback": { "$ref": "#/components/schemas/MessageFeedback" }
        },
        "type": "object",
        "required": ["feedback"],
        "title": "MessageFeedbackUpdate",
        "description": "Schema for the PATCH request to update message feedback."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Enter JWT token (without 'Bearer ' prefix)"
      }
    }
  }
}
